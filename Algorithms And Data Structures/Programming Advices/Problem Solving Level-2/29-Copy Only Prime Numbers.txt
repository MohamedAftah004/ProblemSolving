		#include <iostream>

using namespace std;

enum enPrimeOrNot { prime = 1, NotPrime = 2 };

enPrimeOrNot ChackNumber(int number) {

	int M = round(number / 2);

	for (int counter = 2; counter <= M; counter++) {

		if (number % counter == 0)
			return enPrimeOrNot::NotPrime;
	}
	return enPrimeOrNot::prime;
}


int CreatRandomNumber(int from, int to) {

	int RandomNumber = rand() % (to - from + 1) + from;
	return RandomNumber;

}



void FillArrayWithRandomNumber(int arr[100], int& arrLength) {

	cout << "Enter Number of elements : ";
	cin >> arrLength;

	for (int i = 0; i < arrLength; i++) {

		arr[i] = CreatRandomNumber(1, 100);
		

	}




}

void CopyOnlyPrimeNumbers(int arrSource[100], int arrDestinition[100]
	, int arrLength, int &arr2Length) {

	int counter = 0;

	for (int i = 0; i < arrLength; i++) {

		if (ChackNumber(arrSource[i]) == enPrimeOrNot::prime) {
			arrDestinition[counter] = arrSource[i];
			counter++;

		}

	}
	arr2Length = --counter;
}


void PrintArray(int arr[100], int arrLength) {

	for (int i = 0; i < arrLength; i++) 
		cout << arr[i] << "  ";

	
	cout << "\n";
}

int main() {

	srand((unsigned)time(NULL));
	int arr[100], arrLength;
	FillArrayWithRandomNumber(arr, arrLength);

	int arr2[100], arr2Length = 0;
	CopyOnlyPrimeNumbers(arr, arr2, arrLength, arr2Length);

	cout << "\nArray elements --------------- : ";
	PrintArray(arr, arrLength);

	cout << "\n\nCopy Prime numbers Only ------ : ";
	PrintArray(arr2, arr2Length);


	return 0;
}