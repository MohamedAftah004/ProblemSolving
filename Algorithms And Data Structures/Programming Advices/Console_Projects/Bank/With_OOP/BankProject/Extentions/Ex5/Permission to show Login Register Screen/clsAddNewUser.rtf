{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red128\green128\blue128;\red163\green21\blue21;\red0\green0\blue255;
\red43\green145\blue175;\red0\green128\blue128;\red47\green79\blue79;}
{\*\expandedcolortbl;;\csgenericrgb\c50196\c50196\c50196;\csgenericrgb\c63922\c8235\c8235;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c16863\c56863\c68627;\csgenericrgb\c0\c50196\c50196;\csgenericrgb\c18431\c30980\c30980;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs19 \cf2 \cb0 #pragma\cf0  \cf2 once\cf0 \
\cf2 #include\cf0  \cf3 <iostream>\cf0 \
\cf2 #include\cf0  \cf3 "clsUsers.h"\cf0 ;\
\cf2 #include\cf0  \cf3 "clsMainMenue.h"\cf0 ;\
\cf2 #include\cf0  \cf3 "clsScreen.h"\cf0 ;\
\cf2 #include\cf0  \cf3 <string>\cf0 \
\cf4 class\cf0  \cf5 clsAddNewUserScreen\cf0  : \cf4 protected\cf0  \cf5 clsScreen\cf0 \
\{\
\
\cf4 private\cf0 :\
\
	\cf4 static\cf0  \cf4 void\cf0  _PrintUserCard(\cf5 clsUsers\cf0  \cf2 User\cf0 )\
	\{\
\
		cout \cf6 <<\cf0  \cf3 "\\nUser Card:"\cf0 ;\
		cout \cf6 <<\cf0  \cf3 "\\n__________________________"\cf0 ;\
		cout \cf6 <<\cf0  \cf3 "\\nFirstName   : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .FirstName;\
		cout \cf6 <<\cf0  \cf3 "\\nLastName    : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .LastName;\
		cout \cf6 <<\cf0  \cf3 "\\nFull Name   : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .FullName();\
		cout \cf6 <<\cf0  \cf3 "\\nEmail       : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .Email;\
		cout \cf6 <<\cf0  \cf3 "\\nPhone       : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .Phone;\
		cout \cf6 <<\cf0  \cf3 "\\nPassword    : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .Password;\
		cout \cf6 <<\cf0  \cf3 "\\nPermission  : "\cf0  \cf6 <<\cf0  \cf2 User\cf0 .Permissions;\
		cout \cf6 <<\cf0  \cf3 "\\n__________________________\\n"\cf0 ;\
\
	\}\
\
	\cf4 static\cf0  \cf4 void\cf0  _ReadUserInfo(\cf5 clsUsers\cf0  &\cf2 User\cf0 )\
	\{\
		cout \cf6 <<\cf0  \cf3 "Enter First Name : "\cf0 ;\
		\cf2 User\cf0 .FirstName = \cf5 clsInputValidate\cf0 ::ReadString();\
\
		cout \cf6 <<\cf0  \cf3 "Enter Last Name  : "\cf0 ;\
		\cf2 User\cf0 .LastName = \cf5 clsInputValidate\cf0 ::ReadString();\
\
		cout \cf6 <<\cf0  \cf3 "Enter Email      : "\cf0 ;\
		\cf2 User\cf0 .Email = \cf5 clsInputValidate\cf0 ::ReadString();\
\
		cout \cf6 <<\cf0  \cf3 "Enter Phone      : "\cf0 ;\
		\cf2 User\cf0 .Phone = \cf5 clsInputValidate\cf0 ::ReadString();\
\
		cout \cf6 <<\cf0  \cf3 "Enter Password   : "\cf0 ;\
		\cf2 User\cf0 .Password = \cf5 clsInputValidate\cf0 ::ReadString();\
\
		cout \cf6 <<\cf0  \cf3 "\\n\\nEnter Permissions:"\cf0 ;\
		\cf2 User\cf0 .Permissions = _ReadPermissionsToSet();\
	\}\
\
	\cf4 static\cf0  \cf4 int\cf0  _ReadPermissionsToSet()\
	\{\
\
		\cf4 int\cf0  Permissions = 0;\
		\cf4 char\cf0  Answer = \cf3 'n'\cf0 ;\
\
\
		cout \cf6 <<\cf0  \cf3 "\\nDo you want to give full access? y/n? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			\cf4 return\cf0  -1;\
		\}\
		\
		cout \cf6 <<\cf0  \cf3 "\\n\\n____________________________________________________________________________________________\\n"\cf0 ;\
		cout \cf6 <<\cf0  \cf3 "\\t\\t\\t\\tDo you want to give access to : \\n"\cf0 ;\
\
		cout \cf6 <<\cf0  \cf3 "\\nShow Clients List? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pListClients\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nAdd New Client? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pAddNewClient\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nDelete Client? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pDeleteClient\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nUpdate Client? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pUpdateClients\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nFind Client? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pFindClient\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nTransaction Menue? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pTransaction\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nManage Users Menue? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pManageUsers\cf0 ;\
		\}\
\
		cout \cf6 <<\cf0  \cf3 "\\nShow Login Register History? "\cf0 ;\
		cin \cf6 >>\cf0  Answer;\
		\cf4 if\cf0  (toupper(Answer) == \cf3 'Y'\cf0 )\
		\{\
			Permissions += \cf5 clsUsers\cf0 ::\cf5 enPermissions\cf0 ::\cf7 pLoginRegister\cf0 ;\
		\}\
\
\
		\cf4 return\cf0  Permissions;\
	\}\
\
\
	\cf4 public\cf0 :\
		\cf4 static\cf0  \cf4 void\cf0  ShowAddNewUserScreen()\
		\{\
\
			_DrawScreenHeader(\cf3 "Add New User Screen"\cf0 );\
\
			\cf5 string\cf0  UserName;\
			cout \cf6 <<\cf0  \cf3 "\\nPlease enter User name : "\cf0 ;\
			UserName \cf6 =\cf0  \cf5 clsInputValidate\cf0 ::ReadString();\
\
			\cf4 while\cf0  (\cf5 clsUsers\cf0 ::IsUserExist(UserName))\
			\{\
				cout \cf6 <<\cf0  \cf3 "\\nUser Is Already Used, Choose another one : "\cf0 ;\
				UserName \cf6 =\cf0  \cf5 clsInputValidate\cf0 ::ReadString();\
			\}\
\
			\cf5 clsUsers\cf0  NewUser = \cf5 clsUsers\cf0 ::GetAddNewUserObject(UserName);\
			_ReadUserInfo(NewUser);\
\
			\cf5 clsUsers\cf0 ::\cf5 enSaveResults\cf0  SaveResult;\
\
			SaveResult = NewUser.Save();\
\
			\cf4 switch\cf0  (SaveResult)\
			\{\
\
			\cf4 case\cf0  \cf5 clsUsers\cf0 ::\cf5 enSaveResults\cf0 ::\cf7 svSucceeded\cf0 :\
			\{\
				cout \cf6 <<\cf0  \cf3 "\\nUser Added Successfully.\\n"\cf0 ;\
				\cf4 break\cf0 ;\
			\}\
			\cf4 case\cf0  \cf5 clsUsers\cf0 ::\cf5 enSaveResults\cf0 ::\cf7 svFaildEmptyObject\cf0 :\
			\{\
				cout \cf6 <<\cf0  \cf3 "\\nError User not saved because it's Empty."\cf0 ;\
				\cf4 break\cf0 ;\
			\}\
\
			\cf4 case\cf0  \cf5 clsUsers\cf0 ::\cf5 enSaveResults\cf0 ::\cf7 svFaildUserExists\cf0 :\
			\{\
				cout \cf6 <<\cf0  \cf3 "\\nError User not saved because is UserName is used!\\n"\cf0 ;\
				\cf4 break\cf0 ;\
			\}\
\
			\}\
\
\
		\}\
\
\
\};\
\
}