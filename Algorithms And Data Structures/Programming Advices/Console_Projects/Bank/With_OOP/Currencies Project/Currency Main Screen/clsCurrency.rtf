{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red128\green128\blue128;\red163\green21\blue21;\red0\green0\blue255;
\red43\green145\blue175;\red47\green79\blue79;\red0\green128\blue128;\red0\green128\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c50196\c50196\c50196;\csgenericrgb\c63922\c8235\c8235;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c16863\c56863\c68627;\csgenericrgb\c18431\c30980\c30980;\csgenericrgb\c0\c50196\c50196;\csgenericrgb\c0\c50196\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs19 \cf2 \cb0 #pragma\cf0  \cf2 once\cf0 \
\
\cf2 #include\cf3 <iostream>\cf0 \
\cf2 #include\cf3 <string>\cf0 \
\cf2 #include\cf0  \cf3 "clsString.h"\cf0 \
\cf2 #include\cf0  \cf3 <vector>\cf0 \
\cf2 #include\cf0  \cf3 <fstream>\cf0 \
\cf4 class\cf0  \cf5 clsCurrency\cf0 \
\{\
\
\cf4 private\cf0 :\
\
    \cf4 enum\cf0  \cf5 enMode\cf0  \{ \cf6 EmptyMode\cf0  = 0, \cf6 UpdateMode\cf0  = 1 \};\
    \cf5 enMode\cf0  _Mode;\
\
    \cf5 string\cf0  _Country;\
    \cf5 string\cf0  _CurrencyCode;\
    \cf5 string\cf0  _CurrencyName;\
    \cf4 float\cf0  _Rate;\
\
    \cf4 static\cf0  \cf5 clsCurrency\cf0  _ConvertLinetoCurrencyObject(\cf5 string\cf0  \cf2 Line\cf0 , \cf5 string\cf0  \cf2 Seperator\cf0  = \cf3 "#//#"\cf0 )\
    \{\
        \cf5 vector\cf0 <\cf5 string\cf0 > vCurrencyData;\
        vCurrencyData \cf7 =\cf0  \cf5 clsString\cf0 ::Split(\cf2 Line\cf0 , \cf2 Seperator\cf0 );\
\
        \cf4 return\cf0  \cf5 clsCurrency\cf0 (\cf5 enMode\cf0 ::\cf6 UpdateMode\cf0 , vCurrencyData\cf7 [\cf0 0\cf7 ]\cf0 , vCurrencyData\cf7 [\cf0 1\cf7 ]\cf0 , vCurrencyData\cf7 [\cf0 2\cf7 ]\cf0 ,\
            stod(vCurrencyData\cf7 [\cf0 3\cf7 ]\cf0 ));\
\
    \}\
\
    \cf4 static\cf0  \cf5 string\cf0  _ConverCurrencyObjectToLine(\cf5 clsCurrency\cf0  \cf2 Currency\cf0 , \cf5 string\cf0  \cf2 Seperator\cf0  = \cf3 "#//#"\cf0 )\
    \{\
\
        \cf5 string\cf0  stCurrencyRecord = \cf3 ""\cf0 ;\
        stCurrencyRecord \cf7 +=\cf0  \cf2 Currency\cf0 .Country() \cf7 +\cf0  \cf2 Seperator\cf0 ;\
        stCurrencyRecord \cf7 +=\cf0  \cf2 Currency\cf0 .CurrencyCode() \cf7 +\cf0  \cf2 Seperator\cf0 ;\
        stCurrencyRecord \cf7 +=\cf0  \cf2 Currency\cf0 .CurrencyName() \cf7 +\cf0  \cf2 Seperator\cf0 ;\
        stCurrencyRecord \cf7 +=\cf0  to_string(\cf2 Currency\cf0 .Rate());\
\
        \cf4 return\cf0  stCurrencyRecord;\
\
    \}\
\
    \cf4 static\cf0   \cf5 vector\cf0  <\cf5 clsCurrency\cf0 > _LoadCurrencysDataFromFile()\
    \{\
\
        \cf5 vector\cf0  <\cf5 clsCurrency\cf0 > vCurrencys;\
\
        \cf5 fstream\cf0  MyFile;\
        MyFile.open(\cf3 "Currencies.txt"\cf0 , \cf5 ios\cf0 ::in);\cf8 //read Mode\cf0 \
\
        \cf4 if\cf0  (MyFile.is_open())\
        \{\
\
            \cf5 string\cf0  Line;\
\
            \cf4 while\cf0  (getline(MyFile, Line))\
            \{\
\
                \cf5 clsCurrency\cf0  Currency = _ConvertLinetoCurrencyObject(Line);\
\
                vCurrencys.push_back(Currency);\
            \}\
\
            MyFile.close();\
\
        \}\
\
        \cf4 return\cf0  vCurrencys;\
\
    \}\
\
    \cf4 static\cf0  \cf4 void\cf0  _SaveCurrencyDataToFile(\cf5 vector\cf0  <\cf5 clsCurrency\cf0 > \cf2 vCurrencys\cf0 )\
    \{\
\
        \cf5 fstream\cf0  MyFile;\
        MyFile.open(\cf3 "Currencies.txt"\cf0 , \cf5 ios\cf0 ::out);\cf8 //overwrite\cf0 \
\
        \cf5 string\cf0  DataLine;\
\
        \cf4 if\cf0  (MyFile.is_open())\
        \{\
\
            \cf4 for\cf0  (\cf5 clsCurrency\cf0  C : \cf2 vCurrencys\cf0 )\
            \{\
                DataLine \cf7 =\cf0  _ConverCurrencyObjectToLine(C);\
                MyFile \cf7 <<\cf0  DataLine \cf7 <<\cf0  endl;\
\
\
\
            \}\
\
            MyFile.close();\
\
        \}\
\
    \}\
\
    \cf4 void\cf0  _Update()\
    \{\
        \cf5 vector\cf0  <\cf5 clsCurrency\cf0 > _vCurrencys;\
        _vCurrencys \cf7 =\cf0  _LoadCurrencysDataFromFile();\
\
        \cf4 for\cf0  (\cf5 clsCurrency\cf0 & C : _vCurrencys)\
        \{\
            \cf4 if\cf0  (C.CurrencyCode() \cf7 ==\cf0  CurrencyCode())\
            \{\
                C \cf7 =\cf0  *\cf4 this\cf0 ;\
                \cf4 break\cf0 ;\
            \}\
\
        \}\
\
        _SaveCurrencyDataToFile(_vCurrencys);\
\
    \}\
\
    \cf4 static\cf0  \cf5 clsCurrency\cf0  _GetEmptyCurrencyObject()\
    \{\
        \cf4 return\cf0  \cf5 clsCurrency\cf0 (\cf5 enMode\cf0 ::\cf6 EmptyMode\cf0 , \cf3 ""\cf0 , \cf3 ""\cf0 , \cf3 ""\cf0 , 0);\
    \}\
\
\cf4 public\cf0 :\
\
    clsCurrency(\cf5 enMode\cf0  \cf2 Mode\cf0 , \cf5 string\cf0  \cf2 Country\cf0 , \cf5 string\cf0  \cf2 CurrencyCode\cf0 , \cf5 string\cf0  \cf2 CurrencyName\cf0 , \cf4 float\cf0  \cf2 Rate\cf0 )\
    \{\
        _Mode = \cf2 Mode\cf0 ;\
        _Country \cf7 =\cf0  \cf2 Country\cf0 ;\
        _CurrencyCode \cf7 =\cf0  \cf2 CurrencyCode\cf0 ;\
        _CurrencyName \cf7 =\cf0  \cf2 CurrencyName\cf0 ;\
        _Rate = \cf2 Rate\cf0 ;\
    \}\
\
    \cf4 static\cf0  \cf5 vector\cf0  <\cf5 clsCurrency\cf0 > GetAllUSDRates()\
    \{\
\
        \cf4 return\cf0  _LoadCurrencysDataFromFile();\
\
    \}\
\
    \cf4 bool\cf0  IsEmpty()\
    \{\
        \cf4 return\cf0  (_Mode == \cf5 enMode\cf0 ::\cf6 EmptyMode\cf0 );\
    \}\
\
    \cf5 string\cf0  Country()\
    \{\
        \cf4 return\cf0  _Country;\
    \}\
\
    \cf5 string\cf0  CurrencyCode()\
    \{\
        \cf4 return\cf0  _CurrencyCode;\
    \}\
\
    \cf5 string\cf0  CurrencyName()\
    \{\
        \cf4 return\cf0  _CurrencyName;\
    \}\
\
    \cf4 void\cf0  UpdateRate(\cf4 float\cf0  \cf2 NewRate\cf0 )\
    \{\
        _Rate = \cf2 NewRate\cf0 ;\
        _Update();\
    \}\
\
    \cf4 float\cf0  Rate()\
    \{\
        \cf4 return\cf0  _Rate;\
    \}\
\
\
    \cf4 static\cf0    \cf5 clsCurrency\cf0  FindByCode(\cf5 string\cf0  \cf2 CurrencyCode\cf0 )\
    \{\
\
        \cf2 CurrencyCode\cf0  \cf7 =\cf0  \cf5 clsString\cf0 ::UpperAllString(\cf2 CurrencyCode\cf0 );\
\
        \cf5 fstream\cf0  MyFile;\
        MyFile.open(\cf3 "Currencies.txt"\cf0 , \cf5 ios\cf0 ::in);\cf8 //read Mode\cf0 \
\
        \cf4 if\cf0  (MyFile.is_open())\
        \{\
            \cf5 string\cf0  Line;\
            \cf4 while\cf0  (getline(MyFile, Line))\
            \{\
                \cf5 clsCurrency\cf0  Currency = _ConvertLinetoCurrencyObject(Line);\
                \cf4 if\cf0  (Currency.CurrencyCode() \cf7 ==\cf0  \cf2 CurrencyCode\cf0 )\
                \{\
                    MyFile.close();\
                    \cf4 return\cf0  Currency;\
                \}\
            \}\
\
            MyFile.close();\
\
        \}\
\
        \cf4 return\cf0  _GetEmptyCurrencyObject();\
\
    \}\
\
    \cf4 static\cf0    \cf5 clsCurrency\cf0  FindByCountry(\cf5 string\cf0  \cf2 Country\cf0 )\
    \{\
        \cf2 Country\cf0  \cf7 =\cf0  \cf5 clsString\cf0 ::UpperAllString(\cf2 Country\cf0 );\
\
        \cf5 fstream\cf0  MyFile;\
        MyFile.open(\cf3 "Currencies.txt"\cf0 , \cf5 ios\cf0 ::in);\cf8 //read Mode\cf0 \
\
        \cf4 if\cf0  (MyFile.is_open())\
        \{\
            \cf5 string\cf0  Line;\
            \cf4 while\cf0  (getline(MyFile, Line))\
            \{\
                \cf5 clsCurrency\cf0  Currency = _ConvertLinetoCurrencyObject(Line);\
                \cf4 if\cf0  (\cf5 clsString\cf0 ::UpperAllString(Currency.Country()) \cf7 ==\cf0  \cf2 Country\cf0 )\
                \{\
                    MyFile.close();\
                    \cf4 return\cf0  Currency;\
                \}\
\
            \}\
\
            MyFile.close();\
\
        \}\
\
        \cf4 return\cf0  _GetEmptyCurrencyObject();\
\
    \}\
\
    \cf4 static\cf0  \cf4 bool\cf0  IsCurrencyExist(\cf5 string\cf0  \cf2 CurrencyCode\cf0 )\
    \{\
        \cf5 clsCurrency\cf0  C1 = \cf5 clsCurrency\cf0 ::FindByCode(\cf2 CurrencyCode\cf0 );\
        \cf4 return\cf0  (!C1.IsEmpty());\
\
    \}\
\
    \cf4 static\cf0  \cf5 vector\cf0  <\cf5 clsCurrency\cf0 > GetCurrenciesList()\
    \{\
        \cf4 return\cf0  _LoadCurrencysDataFromFile();\
    \}\
\};\
\
\
\
}