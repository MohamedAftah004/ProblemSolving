{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red128\green128\blue128;\red163\green21\blue21;\red0\green0\blue255;
\red43\green145\blue175;\red0\green128\blue128;\red0\green128\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c50196\c50196\c50196;\csgenericrgb\c63922\c8235\c8235;\csgenericrgb\c0\c0\c100000;
\csgenericrgb\c16863\c56863\c68627;\csgenericrgb\c0\c50196\c50196;\csgenericrgb\c0\c50196\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs19 \cf2 \cb0 #include\cf0  \cf3 <iostream>\cf0 \
\cf2 #include\cf0  \cf3 <vector>\cf0 \
\cf2 #include\cf0  \cf3 <string>\cf0 \
\
\cf4 using\cf0  \cf4 namespace\cf0  std;\
\
\
\cf4 struct\cf0  \cf5 stDate\cf0  \{\
	\cf4 short\cf0  Day;\
	\cf4 short\cf0  Month;\
	\cf4 short\cf0  Year;\
\};\
\
\
\cf5 vector\cf0 <\cf5 string\cf0 >SplitString(\cf5 string\cf0  \cf2 DateLine\cf0 , \cf5 string\cf0  \cf2 Delim\cf0 )\
\{\
\
	\cf4 short\cf0  pos = 0;\
	\cf5 string\cf0  sWord = \cf3 ""\cf0 ;\
	\cf5 vector\cf0 <\cf5 string\cf0 >vDateCutting;\
\
	\cf4 while\cf0  ((pos = \cf2 DateLine\cf0 .find(\cf2 Delim\cf0 )) != std::\cf5 string\cf0 ::npos)\
	\{\
\
		sWord \cf6 =\cf0  \cf2 DateLine\cf0 .substr(0, pos);\
		\cf2 DateLine\cf0 .erase(0, pos + \cf2 Delim\cf0 .length());\
\
		\cf4 if\cf0  (sWord \cf6 !=\cf0  \cf3 ""\cf0 )\
		\{\
			vDateCutting.push_back(sWord);\
		\}\
\
	\}\
\
	\cf4 if\cf0  (\cf2 DateLine\cf0  \cf6 !=\cf0  \cf3 ""\cf0 )\
		vDateCutting.push_back(\cf2 DateLine\cf0 );\
\
\
	\cf4 return\cf0  vDateCutting;\
\}\
\
\cf5 string\cf0  DateToString(\cf5 stDate\cf0  \cf2 Date\cf0 )\
\{\
	\cf4 return\cf0  to_string(\cf2 Date\cf0 .Day) \cf6 +\cf0  \cf3 "/"\cf0  \cf6 +\cf0  to_string(\cf2 Date\cf0 .Month) \cf6 +\cf0  \cf3 "/"\cf0  \cf6 +\cf0  to_string(\cf2 Date\cf0 .Year);\
\}\
\
\
\cf5 stDate\cf0  StringToDate(\cf5 string\cf0  \cf2 DateLine\cf0  )\
\{\
	\cf5 stDate\cf0  Date;\
	\cf5 vector\cf0 <\cf5 string\cf0 >vDate;\
\
	vDate \cf6 =\cf0  SplitString(\cf2 DateLine\cf0 , \cf3 "/"\cf0 );\
\
	Date.Day = stoi(vDate\cf6 [\cf0 0\cf6 ]\cf0 );\
	Date.Month = stoi(vDate\cf6 [\cf0 1\cf6 ]\cf0 );\
	Date.Year = stoi(vDate\cf6 [\cf0 2\cf6 ]\cf0 );\
\
\
	\cf4 return\cf0  Date;\
\}\
\
\
\
\cf7 /*\cf0 \
\cf7 string ConvertRecordToLine(stDate Date , string Sperator = "/")\cf0 \
\cf7 \{\cf0 \
\
\cf7 	string DateLineInfo = "";\cf0 \
\cf7 	DateLineInfo = Date.Day + Sperator;\cf0 \
\cf7 	DateLineInfo += Date.Month + Sperator;\cf0 \
\cf7 	DateLineInfo += Date.Year;\cf0 \
\
\cf7 	return DateLineInfo;\cf0 \
\
\cf7 \}\cf0 \
\cf7 */\cf0 \
\
\
\
\cf5 string\cf0  ReadFullDate()\
\{\
\
	\cf5 string\cf0  FullDate = \cf3 ""\cf0 ;\
	cout \cf6 <<\cf0  \cf3 "Please Enter Date dd/mm//yyyy  ? "\cf0 ;\
	getline(cin \cf6 >>\cf0  ws, FullDate);\
	\cf4 return\cf0  FullDate;\
\
\}\
\
\cf4 int\cf0  main()\
\{\
\
	\cf5 string\cf0  DateLineInfo = ReadFullDate();\
	\cf5 stDate\cf0  Date = StringToDate(DateLineInfo);\
	\
\
	cout \cf6 <<\cf0  \cf3 "\\nDay   : "\cf0  \cf6 <<\cf0  Date.Day \cf6 <<\cf0  endl;\
	cout \cf6 <<\cf0  \cf3 "Month : "\cf0  \cf6 <<\cf0  Date.Month \cf6 <<\cf0  endl;\
	cout \cf6 <<\cf0  \cf3 "Year  : "\cf0  \cf6 <<\cf0  Date.Year \cf6 <<\cf0  endl;\
\
	cout \cf6 <<\cf0  \cf3 "\\nYou Entered : "\cf0  \cf6 <<\cf0  DateToString(Date) \cf6 <<\cf0  endl;\
\
	system(\cf3 "pause>0"\cf0 );\
	\cf4 return\cf0  0;\
\}}